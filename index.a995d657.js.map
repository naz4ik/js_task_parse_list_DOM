{"mappings":"AC8BA,IA3BQ,EASA,EAkBF,EAAe,SAAS,gBAAgB,CAAC,MAzB7C,CAFM,EAAY,MAAM,IAAI,CA6BrB,IA3BG,IAAI,CAAC,SAAC,CAAA,CAAG,CAAnB,EACE,IAAM,EAAU,WAAW,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAS,KAG7D,OAAO,AAFS,WAAW,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAS,KAE5C,CACnB,GAEM,EAAgB,SAAS,aAAa,CAAC,MAE7C,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,EAAc,WAAW,CAAC,EAC5B,GAIO,MAAM,IAAI,CAaN,GAba,GAAG,CAAC,SAAC,CAA7B,EACE,MAAO,CACL,KAAM,EAAS,SAAS,CAAC,IAAI,GAC7B,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,WAAW,EAAS,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAS,KAC5D,IAAK,SAAS,EAAS,OAAO,CAAC,GAAG,CACpC,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction sortList(list) {\n    var employees = Array.from(list);\n    employees.sort(function(a, b) {\n        var salaryA = parseFloat(a.dataset.salary.replace(/[$,]/g, \"\"));\n        var salaryB = parseFloat(b.dataset.salary.replace(/[$,]/g, \"\"));\n        return salaryB - salaryA;\n    });\n    var listContainer = document.querySelector(\"ul\");\n    employees.forEach(function(employee) {\n        listContainer.appendChild(employee);\n    });\n}\nfunction getEmployees(list) {\n    return Array.from(list).map(function(employee) {\n        return {\n            name: employee.innerText.trim(),\n            position: employee.dataset.position,\n            salary: parseFloat(employee.dataset.salary.replace(/[$,]/g, \"\")),\n            age: parseInt(employee.dataset.age)\n        };\n    });\n}\nvar employeeList = document.querySelectorAll(\"li\");\nsortList(employeeList);\ngetEmployees(employeeList);\n\n//# sourceMappingURL=index.a995d657.js.map\n","'use strict';\n\nfunction sortList(list) {\n  const employees = Array.from(list);\n\n  employees.sort((a, b) => {\n    const salaryA = parseFloat(a.dataset.salary.replace(/[$,]/g, ''));\n    const salaryB = parseFloat(b.dataset.salary.replace(/[$,]/g, ''));\n\n    return salaryB - salaryA;\n  });\n\n  const listContainer = document.querySelector('ul');\n\n  employees.forEach((employee) => {\n    listContainer.appendChild(employee);\n  });\n}\n\nfunction getEmployees(list) {\n  return Array.from(list).map((employee) => {\n    return {\n      name: employee.innerText.trim(),\n      position: employee.dataset.position,\n      salary: parseFloat(employee.dataset.salary.replace(/[$,]/g, '')),\n      age: parseInt(employee.dataset.age),\n    };\n  });\n}\n\nconst employeeList = document.querySelectorAll('li');\n\nsortList(employeeList);\ngetEmployees(employeeList);\n"],"names":["employees","listContainer","employeeList","document","querySelectorAll","Array","from","sort","a","b","salaryA","parseFloat","dataset","salary","replace","salaryB","querySelector","forEach","employee","appendChild","map","name","innerText","trim","position","age","parseInt"],"version":3,"file":"index.a995d657.js.map"}